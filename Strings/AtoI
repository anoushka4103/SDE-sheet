class Solution {
    public int myAtoi(String s) {
        int i = 0, flag = 1;
        int val = 0;
        int n = s.length();
        
        // Skip leading whitespaces
        while (i < n && s.charAt(i) == ' ') {
            i++;
        }

        // Check for sign
        if (i < n && (s.charAt(i) == '-' || s.charAt(i) == '+')) {
            flag = (s.charAt(i) == '-') ? -1 : 1;
            i++;
        }

        // Convert string to integer
        while (i < n && Character.isDigit(s.charAt(i))) {
            int digit = s.charAt(i) - '0';
            
            // Check for overflow/underflow before updating val
            if (val > (Integer.MAX_VALUE - digit) / 10) {
                return flag == 1 ? Integer.MAX_VALUE : Integer.MIN_VALUE;
            }
            
            val = val * 10 + digit;
            i++;
        }
        
        return val * flag;
    }
}
